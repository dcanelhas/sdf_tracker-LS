--------- simple test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three'
}

..............prototype.............
{
    'a':0,
    'b':0.0,
    'c':''
}

--> result: True
--------- simple test, too many keys 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three'
}

..............prototype.............
{
    'a':0,
    'b':0.0
}

--> result: False
--------- simple test, prototype a subset of keys 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three'
}

..............prototype.............
{
    'a':0,
    'b':0.0
}

--> result: True
--------- simple test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three'
}

..............prototype.............
{
    'a':None,
    'b':None
}

--> result: True
--------- simple test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
{
    'a':100L,
    'b':3.141592658,
    'c':'three'
}

..............prototype.............
{
    'a':0,
    'b':0.0
}

--> result: True
--------- simple test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
{
    'a':100L,
    'b':3.141592658,
    'c':'three'
}

..............prototype.............
{
    'a':0,
    'b':0.0
}

--> result: False
--------- simple test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
{
    'a':100L,
    'b':3.141592658,
    'c':'three'
}

..............prototype.............
{
    'a':0,
    'b':0.0
}

--> result: False
--------- simple test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
{
    'a':100L,
    'b':3.141592658,
    'c':'three'
}

..............prototype.............
{
    'a':0,
    'b':0.0,
    'c':0
}

--> result: False
--------- simple test, no type match 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
{
    'a':100L,
    'b':3.141592658,
    'c':'three'
}

..............prototype.............
{
    'a':0,
    'b':0.0,
    'c':0
}

--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
[
    1,
    2.2,
    'three'
]

..............prototype.............
[
    0,
    0.0,
    ''
]

--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
[
    1,
    2.2,
    'three'
]

..............prototype.............
[
    0,
    0.0,
    ''
]

--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
[
    1,
    2.2,
    'three'
]

..............prototype.............
[
    0,
    0.0,
    ''
]

--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
[
    1,
    2.2,
    'three'
]

..............prototype.............
[
    0,
    0.0,
    ''
]

--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
[
    1,
    2.2,
    'three'
]

..............prototype.............
[
    0,
    0.0,
    ''
]

--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
[
    1,
    2.2,
    'three'
]

..............prototype.............
[
    0,
    0.0,
    ''
]

--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
[
    1,
    2.2,
    'three'
]

..............prototype.............
[
    0,
    0.0
]

--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
[
    1,
    2.2,
    'three'
]

..............prototype.............
[
    0,
    0.0
]

--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
[
    1,
    2.2,
    'three'
]

..............prototype.............
[
    0,
    0.0
]

--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
[
    1L,
    2.333333,
    'three'
]

..............prototype.............
[
    0,
    0.0
]

--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
[
    1L,
    2.333333,
    'three'
]

..............prototype.............
[
    0,
    0.0
]

--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
[
    1,
    2.2
]

..............prototype.............
[
    0,
    0.0,
    ''
]

--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
[
    '1',
    '2.2',
    'three'
]

..............prototype.............
[
    0,
    0.0,
    ''
]

--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1.0
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1.0
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1.0
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1.0
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1.0
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1.0
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
(1+0j)
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
(1+0j)
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
(1+0j)
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
(1+0j)
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
(1+0j)
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
(1+0j)
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
[ ]

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
[ ]

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
[ ]

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
[ ]

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
[ ]

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
[ ]

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
()
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
()
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
()
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
()
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
()
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
()
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1.0
..............prototype.............
0.0
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1.0
..............prototype.............
0.0
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1.0
..............prototype.............
0.0
--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1.0
..............prototype.............
0.0
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1.0
..............prototype.............
0.0
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1.0
..............prototype.............
0.0
--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
(1+0j)
..............prototype.............
(0+0j)
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
(1+0j)
..............prototype.............
(0+0j)
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
(1+0j)
..............prototype.............
(0+0j)
--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
(1+0j)
..............prototype.............
(0+0j)
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
(1+0j)
..............prototype.............
(0+0j)
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
(1+0j)
..............prototype.............
(0+0j)
--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
0L
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
0L
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
0L
--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
0L
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
0L
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
0L
--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
[ ]

..............prototype.............
[ ]

--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
[ ]

..............prototype.............
[ ]

--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
[ ]

..............prototype.............
[ ]

--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
[ ]

..............prototype.............
[ ]

--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
[ ]

..............prototype.............
[ ]

--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
[ ]

..............prototype.............
[ ]

--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
()
..............prototype.............
()
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
()
..............prototype.............
()
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
()
..............prototype.............
()
--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
()
..............prototype.............
()
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
()
..............prototype.............
()
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
()
..............prototype.............
()
--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

--> result: True
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1.0
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1.0
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1.0
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1.0
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1.0
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1.0
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
(1+0j)
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
(1+0j)
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
(1+0j)
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
(1+0j)
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
(1+0j)
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
(1+0j)
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
[ ]

..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
[ ]

..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
[ ]

..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
[ ]

..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
[ ]

..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
[ ]

..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
()
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
()
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
()
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
()
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
()
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
()
..............prototype.............
''
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1.0
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1.0
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1.0
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1.0
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1.0
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1.0
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
(1+0j)
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
(1+0j)
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
(1+0j)
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
(1+0j)
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
(1+0j)
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
(1+0j)
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
[ ]

..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
[ ]

..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
[ ]

..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
[ ]

..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
[ ]

..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
[ ]

..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
()
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
()
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
()
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
()
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
()
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
()
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
''
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
''
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
''
..............prototype.............
{ }

--> result: True
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
''
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
''
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
''
..............prototype.............
{ }

--> result: True
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1.0
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1.0
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1.0
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1.0
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1.0
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1.0
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
(1+0j)
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
(1+0j)
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
(1+0j)
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
(1+0j)
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
(1+0j)
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
(1+0j)
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
[ ]

..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
[ ]

..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
[ ]

..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
[ ]

..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
[ ]

..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
[ ]

..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
()
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
()
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
()
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
()
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
()
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
()
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
''
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
''
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
''
..............prototype.............
{ }

--> result: True
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
''
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
''
..............prototype.............
{ }

--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
''
..............prototype.............
{ }

--> result: True
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1.0
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1.0
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1.0
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1.0
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1.0
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1.0
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
(1+0j)
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
(1+0j)
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
(1+0j)
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
(1+0j)
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
(1+0j)
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
(1+0j)
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
1
--> result: True
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
1
--> result: True
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
1
--> result: True
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
1
--> result: True
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
[ ]

..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
[ ]

..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
[ ]

..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
[ ]

..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
[ ]

..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
[ ]

..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
()
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
()
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
()
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
()
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
()
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
()
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
''
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
''
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
''
..............prototype.............
1
--> result: True
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
''
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
''
..............prototype.............
1
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
''
..............prototype.............
1
--> result: True
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
(1+0j)
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
(1+0j)
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
(1+0j)
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
(1+0j)
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
(1+0j)
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
(1+0j)
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
[ ]

..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
[ ]

..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
[ ]

..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
[ ]

..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
[ ]

..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
[ ]

..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
()
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
()
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
()
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
()
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
()
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
()
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
''
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
''
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
''
..............prototype.............
1.0
--> result: True
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
''
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
''
..............prototype.............
1.0
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
''
..............prototype.............
1.0
--> result: True
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1.0
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1.0
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1.0
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1.0
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1.0
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1.0
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
1L
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
1L
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
1L
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
{ }

..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
{ }

..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
{ }

..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
[ ]

..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
[ ]

..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
[ ]

..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
[ ]

..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
[ ]

..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
[ ]

..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
()
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
()
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
()
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
()
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
()
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
()
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
''
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
''
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
''
..............prototype.............
(1+1j)
--> result: True
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
''
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
''
..............prototype.............
(1+1j)
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
''
..............prototype.............
(1+1j)
--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]})
}

--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]})
}

--> result: False
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]})
}

--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]})
}

--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]})
}

--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]})
}

--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': (1, 2.2000000000000002, 3.2999999999999998), 'nested': {'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]}})
..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': None, 'd': [1, {}, []]})
}

--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': (1, 2.2000000000000002, 3.2999999999999998), 'nested': {'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]}})
..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': None, 'd': [1, {}, []]})
}

--> result: False
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': (1, 2.2000000000000002, 3.2999999999999998), 'nested': {'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]}})
..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': None, 'd': [1, {}, []]})
}

--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': (1, 2.2000000000000002, 3.2999999999999998), 'nested': {'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]}})
..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': None, 'd': [1, {}, []]})
}

--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': (1, 2.2000000000000002, 3.2999999999999998), 'nested': {'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]}})
..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': None, 'd': [1, {}, []]})
}

--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': (1, 2.2000000000000002, 3.2999999999999998), 'nested': {'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]}})
..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': None, 'd': [1, {}, []]})
}

--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
array([1,2,3], 'i')
..............prototype.............
array([1,2,3], 'i')
--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
array([1,2,3], 'i')
..............prototype.............
array([1,2,3], 'i')
--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
array([1,2,3], 'i')
..............prototype.............
array([1,2,3], 'i')
--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
array([1,2,3], 'i')
..............prototype.............
array([1,2,3], 'i')
--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
array([1,2,3], 'i')
..............prototype.............
array([1,2,3], 'i')
--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
array([1,2,3], 'i')
..............prototype.............
array([1,2,3], 'i')
--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
array([1.0,2.0,3.0], 'd')
--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
array([1.0,2.0,3.0], 'd')
--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
array([1.0,2.0,3.0], 'd')
--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
array([1.0,2.0,3.0], 'd')
--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
array([1.0,2.0,3.0], 'd')
--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
array([1.0,2.0,3.0], 'd')
--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
[
    1,
    2,
    3
]

--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
[
    1,
    2,
    3
]

--> result: False
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
[
    1,
    2,
    3
]

--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
[
    1,
    2,
    3
]

--> result: False
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
[
    1,
    2,
    3
]

--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
[
    1,
    2,
    3
]

--> result: False
--------- arr test, no type match 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
[
    1,
    2,
    3
]

..............prototype.............
(1, 2, 3)
--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
[
    1,
    2,
    3
]

..............prototype.............
(1, 2, 3)
--> result: False
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
[
    1,
    2,
    3
]

..............prototype.............
(1, 2, 3)
--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
[
    1,
    2,
    3
]

..............prototype.............
(1, 2, 3)
--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
[
    1,
    2,
    3
]

..............prototype.............
(1, 2, 3)
--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
[
    1,
    2,
    3
]

..............prototype.............
(1, 2, 3)
--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: EXACT_MATCH   False
..............instance............
(1, 2, 3)
..............prototype.............
[
    1,
    2,
    3
]

--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   False
..............instance............
(1, 2, 3)
..............prototype.............
[
    1,
    2,
    3
]

--> result: False
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_MATCH   False
..............instance............
(1, 2, 3)
..............prototype.............
[
    1,
    2,
    3
]

--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   False
..............instance............
(1, 2, 3)
..............prototype.............
[
    1,
    2,
    3
]

--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   False
..............instance............
(1, 2, 3)
..............prototype.............
[
    1,
    2,
    3
]

--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   False
..............instance............
(1, 2, 3)
..............prototype.............
[
    1,
    2,
    3
]

--> result: True
--------- simple test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three'
}

..............prototype.............
{
    'a':0,
    'b':0.0,
    'c':''
}

--> result: True
--------- simple test, too many keys 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three'
}

..............prototype.............
{
    'a':0,
    'b':0.0
}

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={'a': 1, 'c': 'three', 'b': 2.2000000000000002} with type:<type 'dict'>
 prototype={'a': 0, 'b': 0.0} with type:<type 'dict'>
 exact_structure=True
 type_match=EXACT_MATCH
instance and prototype do NOT have the same number of elements and we have requested an exact match
--> result: False
--------- simple test, prototype a subset of keys 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three'
}

..............prototype.............
{
    'a':0,
    'b':0.0
}

--> result: True
--------- simple test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three'
}

..............prototype.............
{
    'a':None,
    'b':None
}

--> result: True
--------- simple test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
{
    'a':100L,
    'b':3.141592658,
    'c':'three'
}

..............prototype.............
{
    'a':0,
    'b':0.0
}

--> result: True
--------- simple test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
{
    'a':100L,
    'b':3.141592658,
    'c':'three'
}

..............prototype.............
{
    'a':0,
    'b':0.0
}

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=100 with type:<type 'long'>
 prototype=0 with type:<type 'int'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- simple test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
{
    'a':100L,
    'b':3.141592658,
    'c':'three'
}

..............prototype.............
{
    'a':0,
    'b':0.0
}

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=100 with type:<type 'long'>
 prototype=0 with type:<type 'int'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- simple test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
{
    'a':100L,
    'b':3.141592658,
    'c':'three'
}

..............prototype.............
{
    'a':0,
    'b':0.0,
    'c':0
}

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=three with type:<type 'str'>
 prototype=0 with type:<type 'int'>
 exact_structure=False
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- simple test, no type match 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
{
    'a':100L,
    'b':3.141592658,
    'c':'three'
}

..............prototype.............
{
    'a':0,
    'b':0.0,
    'c':0
}

--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
[
    1,
    2.2,
    'three'
]

..............prototype.............
[
    0,
    0.0,
    ''
]

--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
[
    1,
    2.2,
    'three'
]

..............prototype.............
[
    0,
    0.0,
    ''
]

--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
[
    1,
    2.2,
    'three'
]

..............prototype.............
[
    0,
    0.0,
    ''
]

--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
[
    1,
    2.2,
    'three'
]

..............prototype.............
[
    0,
    0.0,
    ''
]

--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
[
    1,
    2.2,
    'three'
]

..............prototype.............
[
    0,
    0.0,
    ''
]

--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
[
    1,
    2.2,
    'three'
]

..............prototype.............
[
    0,
    0.0,
    ''
]

--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
[
    1,
    2.2,
    'three'
]

..............prototype.............
[
    0,
    0.0
]

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[1, 2.2000000000000002, 'three'] with type:<type 'list'>
 prototype=[0, 0.0] with type:<type 'list'>
 exact_structure=True
 type_match=EXACT_MATCH
Iterables don't match: different lengths
--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
[
    1,
    2.2,
    'three'
]

..............prototype.............
[
    0,
    0.0
]

--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
[
    1,
    2.2,
    'three'
]

..............prototype.............
[
    0,
    0.0
]

--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
[
    1L,
    2.333333,
    'three'
]

..............prototype.............
[
    0,
    0.0
]

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=0 with type:<type 'int'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
[
    1L,
    2.333333,
    'three'
]

..............prototype.............
[
    0,
    0.0
]

--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
[
    1,
    2.2
]

..............prototype.............
[
    0,
    0.0,
    ''
]

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[1, 2.2000000000000002] with type:<type 'list'>
 prototype=[0, 0.0, ''] with type:<type 'list'>
 exact_structure=False
 type_match=LOOSE_MATCH
instance iterable has fewer elements than prototype iterable
--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
[
    '1',
    '2.2',
    'three'
]

..............prototype.............
[
    0,
    0.0,
    ''
]

--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1.0
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1.0
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1.0
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1.0
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1.0
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1.0
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
(1+0j)
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
(1+0j)
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
(1+0j)
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
(1+0j)
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
(1+0j)
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
(1+0j)
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
[ ]

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
[ ]

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
[ ]

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
[ ]

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
[ ]

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
[ ]

..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
()
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
()
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
()
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
()
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
()
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
()
..............prototype.............
None
--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1.0
..............prototype.............
0.0
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1.0
..............prototype.............
0.0
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1.0
..............prototype.............
0.0
--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1.0
..............prototype.............
0.0
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1.0
..............prototype.............
0.0
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1.0
..............prototype.............
0.0
--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
(1+0j)
..............prototype.............
(0+0j)
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
(1+0j)
..............prototype.............
(0+0j)
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
(1+0j)
..............prototype.............
(0+0j)
--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
(1+0j)
..............prototype.............
(0+0j)
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
(1+0j)
..............prototype.............
(0+0j)
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
(1+0j)
..............prototype.............
(0+0j)
--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
0L
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
0L
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
0L
--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
0L
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
0L
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
0L
--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
{ }

--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
[ ]

..............prototype.............
[ ]

--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
[ ]

..............prototype.............
[ ]

--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
[ ]

..............prototype.............
[ ]

--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
[ ]

..............prototype.............
[ ]

--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
[ ]

..............prototype.............
[ ]

--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
[ ]

..............prototype.............
[ ]

--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
()
..............prototype.............
()
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
()
..............prototype.............
()
--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
()
..............prototype.............
()
--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
()
..............prototype.............
()
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
()
..............prototype.............
()
--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
()
..............prototype.............
()
--> result: True
--------- easy test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

--> result: True
--------- easy test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

--> result: True
--------- easy test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

--> result: True
--------- easy test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

--> result: True
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1.0
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1.0
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1.0
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1.0
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1.0
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1.0
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
(1+0j)
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
(1+0j)
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
(1+0j)
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
(1+0j)
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
(1+0j)
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
(1+0j)
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
[ ]

..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
[ ]

..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
[ ]

..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
[ ]

..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
[ ]

..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
[ ]

..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
()
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
()
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
()
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype= with type:<type 'str'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
()
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
()
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
()
..............prototype.............
''
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype= with type:<type 'str'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1.0
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1.0
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1.0
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1.0
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1.0
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1.0
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
(1+0j)
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
(1+0j)
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
(1+0j)
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
(1+0j)
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
(1+0j)
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
(1+0j)
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
[ ]

..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
[ ]

..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
[ ]

..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
[ ]

..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
[ ]

..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
[ ]

..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
()
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
()
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
()
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
()
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
()
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
()
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
''
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance= with type:<type 'str'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
''
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance= with type:<type 'str'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
''
..............prototype.............
{ }

--> result: True
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
''
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance= with type:<type 'str'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
''
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance= with type:<type 'str'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
''
..............prototype.............
{ }

--> result: True
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1.0
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1.0
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1.0
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1.0
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1.0
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1.0
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
(1+0j)
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
(1+0j)
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
(1+0j)
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
(1+0j)
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
(1+0j)
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
(1+0j)
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
[ ]

..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
[ ]

..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
[ ]

..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
[ ]

..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
[ ]

..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
[ ]

..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
()
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
()
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
()
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
()
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
()
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
()
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
''
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance= with type:<type 'str'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
''
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance= with type:<type 'str'>
 prototype={} with type:<type 'dict'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
''
..............prototype.............
{ }

--> result: True
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
''
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance= with type:<type 'str'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
''
..............prototype.............
{ }

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance= with type:<type 'str'>
 prototype={} with type:<type 'dict'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
''
..............prototype.............
{ }

--> result: True
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1.0
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1.0
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1.0
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1.0
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1.0
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1.0
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
(1+0j)
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
(1+0j)
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
(1+0j)
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
(1+0j)
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
(1+0j)
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
(1+0j)
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
1
--> result: True
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
1
--> result: True
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
1
--> result: True
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
1
--> result: True
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
[ ]

..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=EXACT_MATCH
iterable types don't match exactly for an EXACT_MATCH
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
[ ]

..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=LOOSE_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
[ ]

..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
[ ]

..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=EXACT_MATCH
iterable types don't match exactly for an EXACT_MATCH
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
[ ]

..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=LOOSE_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
[ ]

..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
()
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=EXACT_MATCH
iterable types don't match exactly for an EXACT_MATCH
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
()
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=LOOSE_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
()
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
()
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=EXACT_MATCH
iterable types don't match exactly for an EXACT_MATCH
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
()
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=LOOSE_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
()
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
''
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance= with type:<type 'str'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
''
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance= with type:<type 'str'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
''
..............prototype.............
1
--> result: True
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
''
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance= with type:<type 'str'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
''
..............prototype.............
1
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance= with type:<type 'str'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
''
..............prototype.............
1
--> result: True
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
(1+0j)
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
(1+0j)
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
(1+0j)
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
(1+0j)
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
(1+0j)
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
(1+0j)
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1+0j) with type:<type 'complex'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
[ ]

..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=EXACT_MATCH
iterable types don't match exactly for an EXACT_MATCH
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
[ ]

..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=LOOSE_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
[ ]

..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
[ ]

..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=EXACT_MATCH
iterable types don't match exactly for an EXACT_MATCH
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
[ ]

..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=LOOSE_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
[ ]

..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
()
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=EXACT_MATCH
iterable types don't match exactly for an EXACT_MATCH
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
()
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=LOOSE_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
()
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
()
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=EXACT_MATCH
iterable types don't match exactly for an EXACT_MATCH
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
()
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=LOOSE_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
()
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
''
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance= with type:<type 'str'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
''
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance= with type:<type 'str'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=True
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
''
..............prototype.............
1.0
--> result: True
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
''
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance= with type:<type 'str'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
''
..............prototype.............
1.0
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance= with type:<type 'str'>
 prototype=1.0 with type:<type 'float'>
 exact_structure=False
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
''
..............prototype.............
1.0
--> result: True
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1.0
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1.0
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1.0
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1.0
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1.0
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1.0
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'int'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
1L
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
1L
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
1L
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1 with type:<type 'long'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
{ }

..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=EXACT_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
{ }

..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=LOOSE_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
{ }

..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={} with type:<type 'dict'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
table_match_ can only compare tables:
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
[ ]

..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=EXACT_MATCH
iterable types don't match exactly for an EXACT_MATCH
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
[ ]

..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=LOOSE_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
[ ]

..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
[ ]

..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=EXACT_MATCH
iterable types don't match exactly for an EXACT_MATCH
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
[ ]

..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=LOOSE_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
[ ]

..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[] with type:<type 'list'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
()
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=EXACT_MATCH
iterable types don't match exactly for an EXACT_MATCH
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
()
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=LOOSE_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
()
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
()
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=EXACT_MATCH
iterable types don't match exactly for an EXACT_MATCH
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
()
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=LOOSE_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
()
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=() with type:<type 'tuple'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
prototype not iterable
--> result: False
--------- fail test 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
''
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance= with type:<type 'str'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
''
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance= with type:<type 'str'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=True
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
''
..............prototype.............
(1+1j)
--> result: True
--------- fail test 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
''
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance= with type:<type 'str'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=EXACT_MATCH
Requested Exact Match of two primitive types that didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
''
..............prototype.............
(1+1j)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance= with type:<type 'str'>
 prototype=(1+1j) with type:<type 'complex'>
 exact_structure=False
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- fail test 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
''
..............prototype.............
(1+1j)
--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]})
}

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[1, 2.2000000000000002, 3.2999999999999998] with type:<type 'list'>
 prototype=[1, 2.2000000000000002] with type:<type 'list'>
 exact_structure=True
 type_match=EXACT_MATCH
Iterables don't match: different lengths
--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]})
}

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance={'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]} with type:<type 'dict'>
 prototype=dumb_dict(dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]})) with type:<class '__main__.dumb_dict'>
 exact_structure=False
 type_match=EXACT_MATCH
Not the same type for EXACT_MATCH
--> result: False
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]})
}

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[1, 2.2000000000000002, 3.2999999999999998] with type:<type 'list'>
 prototype=[1, 2.2000000000000002] with type:<type 'list'>
 exact_structure=True
 type_match=LOOSE_MATCH
Iterables don't match: different lengths
--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]})
}

--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]})
}

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[1, 2.2000000000000002, 3.2999999999999998] with type:<type 'list'>
 prototype=[1, 2.2000000000000002] with type:<type 'list'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
Iterables don't match: different lengths
--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2,
        3.3
    ],
    'nested':{
        'a':1,
        'b':2.2,
        'c':'three',
        'd':[
            1,
            { },
            [ ]
        ]
    }
}

..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]})
}

--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': (1, 2.2000000000000002, 3.2999999999999998), 'nested': {'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]}})
..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': None, 'd': [1, {}, []]})
}

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=dumb_dict(dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': (1, 2.2000000000000002, 3.2999999999999998), 'nested': {'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]}})) with type:<class '__main__.dumb_dict'>
 prototype={'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, 2.2000000000000002], 'nested': dumb_dict({'a': 1, 'c': 'three', 'b': None, 'd': [1, {}, []]})} with type:<type 'dict'>
 exact_structure=True
 type_match=EXACT_MATCH
Not the same type for EXACT_MATCH
--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': (1, 2.2000000000000002, 3.2999999999999998), 'nested': {'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]}})
..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': None, 'd': [1, {}, []]})
}

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=dumb_dict(dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': (1, 2.2000000000000002, 3.2999999999999998), 'nested': {'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]}})) with type:<class '__main__.dumb_dict'>
 prototype={'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, 2.2000000000000002], 'nested': dumb_dict({'a': 1, 'c': 'three', 'b': None, 'd': [1, {}, []]})} with type:<type 'dict'>
 exact_structure=False
 type_match=EXACT_MATCH
Not the same type for EXACT_MATCH
--> result: False
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': (1, 2.2000000000000002, 3.2999999999999998), 'nested': {'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]}})
..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': None, 'd': [1, {}, []]})
}

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1, 2.2000000000000002, 3.2999999999999998) with type:<type 'tuple'>
 prototype=[1, 2.2000000000000002] with type:<type 'list'>
 exact_structure=True
 type_match=LOOSE_MATCH
Iterables don't match: different lengths
--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': (1, 2.2000000000000002, 3.2999999999999998), 'nested': {'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]}})
..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': None, 'd': [1, {}, []]})
}

--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': (1, 2.2000000000000002, 3.2999999999999998), 'nested': {'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]}})
..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': None, 'd': [1, {}, []]})
}

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1, 2.2000000000000002, 3.2999999999999998) with type:<type 'tuple'>
 prototype=[1, 2.2000000000000002] with type:<type 'list'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
Iterables don't match: different lengths
--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
dumb_dict({'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': (1, 2.2000000000000002, 3.2999999999999998), 'nested': {'a': 1, 'c': 'three', 'b': 2.2000000000000002, 'd': [1, {}, []]}})
..............prototype.............
{
    'a':1,
    'b':2.2,
    'c':'three',
    'd':[
        1,
        2.2
    ],
    'nested':dumb_dict({'a': 1, 'c': 'three', 'b': None, 'd': [1, {}, []]})
}

--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
array([1,2,3], 'i')
..............prototype.............
array([1,2,3], 'i')
--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
array([1,2,3], 'i')
..............prototype.............
array([1,2,3], 'i')
--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
array([1,2,3], 'i')
..............prototype.............
array([1,2,3], 'i')
--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
array([1,2,3], 'i')
..............prototype.............
array([1,2,3], 'i')
--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
array([1,2,3], 'i')
..............prototype.............
array([1,2,3], 'i')
--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
array([1,2,3], 'i')
..............prototype.............
array([1,2,3], 'i')
--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
array([1.0,2.0,3.0], 'd')
--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
array([1.0,2.0,3.0], 'd')
--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
array([1.0,2.0,3.0], 'd')
--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
array([1.0,2.0,3.0], 'd')
--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
array([1.0,2.0,3.0], 'd')
--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
array([1.0,2.0,3.0], 'd')
--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
[
    1,
    2,
    3
]

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=array([1.0,2.0,3.0], 'f') with type:<class 'simplearray.SimpleArray'>
 prototype=[1, 2, 3] with type:<type 'list'>
 exact_structure=True
 type_match=EXACT_MATCH
iterable types don't match exactly for an EXACT_MATCH
--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
[
    1,
    2,
    3
]

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=array([1.0,2.0,3.0], 'f') with type:<class 'simplearray.SimpleArray'>
 prototype=[1, 2, 3] with type:<type 'list'>
 exact_structure=False
 type_match=EXACT_MATCH
iterable types don't match exactly for an EXACT_MATCH
--> result: False
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
[
    1,
    2,
    3
]

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
[
    1,
    2,
    3
]

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=LOOSE_MATCH
Even with loose match, they didn't match
--> result: False
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
[
    1,
    2,
    3
]

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype=1 with type:<type 'int'>
 exact_structure=True
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
array([1.0,2.0,3.0], 'f')
..............prototype.............
[
    1,
    2,
    3
]

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=1.0 with type:<type 'float'>
 prototype=1 with type:<type 'int'>
 exact_structure=False
 type_match=LOOSE_STRING_MATCH
Even with loose match, they didn't match
--> result: False
--------- arr test, no type match 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
[
    1,
    2,
    3
]

..............prototype.............
(1, 2, 3)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[1, 2, 3] with type:<type 'list'>
 prototype=(1, 2, 3) with type:<type 'tuple'>
 exact_structure=True
 type_match=EXACT_MATCH
iterable types don't match exactly for an EXACT_MATCH
--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
[
    1,
    2,
    3
]

..............prototype.............
(1, 2, 3)
**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=[1, 2, 3] with type:<type 'list'>
 prototype=(1, 2, 3) with type:<type 'tuple'>
 exact_structure=False
 type_match=EXACT_MATCH
iterable types don't match exactly for an EXACT_MATCH
--> result: False
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
[
    1,
    2,
    3
]

..............prototype.............
(1, 2, 3)
--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
[
    1,
    2,
    3
]

..............prototype.............
(1, 2, 3)
--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
[
    1,
    2,
    3
]

..............prototype.............
(1, 2, 3)
--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
[
    1,
    2,
    3
]

..............prototype.............
(1, 2, 3)
--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: EXACT_MATCH   True
..............instance............
(1, 2, 3)
..............prototype.............
[
    1,
    2,
    3
]

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1, 2, 3) with type:<type 'tuple'>
 prototype=[1, 2, 3] with type:<type 'list'>
 exact_structure=True
 type_match=EXACT_MATCH
iterable types don't match exactly for an EXACT_MATCH
--> result: False
--------- arr test, no type match 
----- structure_match: NO  type_match: EXACT_MATCH   True
..............instance............
(1, 2, 3)
..............prototype.............
[
    1,
    2,
    3
]

**MESSAGE CAUGHT:
*********FAILURE TO MATCH instance against prototype:
 instance=(1, 2, 3) with type:<type 'tuple'>
 prototype=[1, 2, 3] with type:<type 'list'>
 exact_structure=False
 type_match=EXACT_MATCH
iterable types don't match exactly for an EXACT_MATCH
--> result: False
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_MATCH   True
..............instance............
(1, 2, 3)
..............prototype.............
[
    1,
    2,
    3
]

--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_MATCH   True
..............instance............
(1, 2, 3)
..............prototype.............
[
    1,
    2,
    3
]

--> result: True
--------- arr test, no type match 
----- structure_match: YES  type_match: LOOSE_STRING_MATCH   True
..............instance............
(1, 2, 3)
..............prototype.............
[
    1,
    2,
    3
]

--> result: True
--------- arr test, no type match 
----- structure_match: NO  type_match: LOOSE_STRING_MATCH   True
..............instance............
(1, 2, 3)
..............prototype.............
[
    1,
    2,
    3
]

--> result: True
