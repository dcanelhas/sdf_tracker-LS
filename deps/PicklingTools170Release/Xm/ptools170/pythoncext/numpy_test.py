
from numpy import *

# Defer evaluation in case your version of Python can't handle numpy
results = [(array([1,2,3], dtype=int8),  'P\x00\x00\x00\x00\x01\x01 ns\x03\x00\x00\x00\x01\x02\x03'),
           (array([1,2,3], dtype=int16), 'P\x00\x00\x00\x00\x01\x01 ni\x03\x00\x00\x00\x01\x00\x02\x00\x03\x00'),
           (array([1,2,3], dtype=int32), 'P\x00\x00\x00\x00\x01\x01 nl\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00'),
           (array([1,2,3], dtype=int64), 'P\x00\x00\x00\x00\x01\x01 nx\x03\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00'),
           (array([1,2,3], dtype=uint8), 'P\x00\x00\x00\x00\x01\x01 nS\x03\x00\x00\x00\x01\x02\x03'),
           (array([1,2,3], dtype=uint16), 'P\x00\x00\x00\x00\x01\x01 nI\x03\x00\x00\x00\x01\x00\x02\x00\x03\x00'),
           (array([1,2,3], dtype=uint32), 'P\x00\x00\x00\x00\x01\x01 nL\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00'),
           (array([1,2,3], dtype=uint64), 'P\x00\x00\x00\x00\x01\x01 nX\x03\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00'),
           (array([1,2,3], dtype=float32), 'P\x00\x00\x00\x00\x01\x01 nf\x03\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00@@'),
           (array([1,2,3], dtype=float64), 'P\x00\x00\x00\x00\x01\x01 nd\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x08@'),
           (array([1,2,3], dtype=complex64), 'P\x00\x00\x00\x00\x01\x01 nF\x03\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00@@\x00\x00\x00\x00'),
           (array([1,2,3], dtype=complex128), 'P\x00\x00\x00\x00\x01\x01 nD\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08@\x00\x00\x00\x00\x00\x00\x00\x00')
           ]


def big_arr () :
    a = zeros(2**32+1, 'b')
    return a


